--- guest_physmap_mark_populate_on_demand_OLD.c	2021-12-07 00:18:54.434911300 +0800
+++ guest_physmap_mark_populate_on_demand_NEW.c	2021-12-07 00:18:54.435906900 +0800
@@ -1,57 +1,20 @@
 int
-guest_physmap_mark_populate_on_demand(struct domain *d, unsigned long gfn_l,
+guest_physmap_mark_populate_on_demand(struct domain *d, unsigned long gfn,
                                       unsigned int order)
 {
-    struct p2m_domain *p2m = p2m_get_hostp2m(d);
-    gfn_t gfn = _gfn(gfn_l);
-    unsigned long i, n, pod_count = 0;
-    int rc = 0;
+    unsigned long left = 1UL << order;
+    unsigned int chunk_order = find_first_set_bit(gfn | left);
+    int rc;
 
     if ( !paging_mode_translate(d) )
         return -EINVAL;
 
-    gfn_lock(p2m, gfn, order);
+    do {
+        rc = mark_populate_on_demand(d, gfn, chunk_order);
 
-    P2M_DEBUG("mark pod gfn=%#lx\n", gfn_l);
-
-    /* Make sure all gpfns are unused */
-    for ( i = 0; i < (1UL << order); i += n )
-    {
-        p2m_type_t ot;
-        p2m_access_t a;
-        unsigned int cur_order;
-
-        p2m->get_entry(p2m, gfn_add(gfn, i), &ot, &a, 0, &cur_order, NULL);
-        n = 1UL << min(order, cur_order);
-        if ( ot == p2m_populate_on_demand )
-        {
-            /* Count how many PoD entries we'll be replacing if successful */
-            pod_count += n;
-        }
-        else if ( ot != p2m_invalid && ot != p2m_mmio_dm )
-        {
-            P2M_DEBUG("gfn_to_mfn returned type %d!\n", ot);
-            rc = -EBUSY;
-            goto out;
-        }
-    }
-
-    /* Now, actually do the two-way mapping */
-    rc = p2m_set_entry(p2m, gfn, INVALID_MFN, order,
-                       p2m_populate_on_demand, p2m->default_access);
-    if ( rc == 0 )
-    {
-        pod_lock(p2m);
-        p2m->pod.entry_count += 1UL << order;
-        p2m->pod.entry_count -= pod_count;
-        BUG_ON(p2m->pod.entry_count < 0);
-        pod_unlock(p2m);
-
-        ioreq_request_mapcache_invalidate(d);
-    }
-
-out:
-    gfn_unlock(p2m, gfn, order);
+        left -= 1UL << chunk_order;
+        gfn += 1UL << chunk_order;
+    } while ( !rc && left );
 
     return rc;
 }
